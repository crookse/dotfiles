#!/bin/bash
#
# Load/process all logic in this file for the shells

#///////////////////////////////////////////////////////////////////////////////////////////////////
#// INITIAL SETTINGS ///////////////////////////////////////////////////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////////////////////////

function dotfiles_echo() {
  echo -e "[.bashrc] ${1}"
}

bind "set completion-ignore-case on"   # Allow use of [Tab] to autocomplete file paths without considering letter case

export CLICOLOR=1                      # Enable color output
export LSCOLORS=excxFxFxBxxfxfxBxBxexe # Set directory colors
export EDITOR='vim'                    # Set terminal editor to vim
export TERM='xterm-256color'           # Support 256 colors

echo -n "[.bashrc] Same session. Resetting PATH..."
export DENO_INSTALL="~/.deno"
export PATH="$DENO_INSTALL/bin:/usr/local/lib/node_modules/bin:$PATH"
echo " Done."

dotfiles_echo "PATH is... \n  $(echo $PATH | sed -e $'s/:/\\\n  /g')"
dotfiles_echo "TERM is ${TERM}"

#///////////////////////////////////////////////////////////////////////////////////////////////////
#// VARIABLES //////////////////////////////////////////////////////////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////////////////////////
#
# Set the root dotfiles directory based on the $HOME environment variable.
#

# Required variables
# Nothing here yet

# Your variables
# Nothing here yet

#///////////////////////////////////////////////////////////////////////////////////////////////////
#// INCLUDES ///////////////////////////////////////////////////////////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////////////////////////
#
# Source files in the specified directories. Files are sourced alphabetically.
#

# Include files in the .bash directory
for file in $(ls ~/.bash); do
  source ~/.bash/$file
done

#///////////////////////////////////////////////////////////////////////////////////////////////////
#// PROMPTS ////////////////////////////////////////////////////////////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////////////////////////
#
# Example output when in git directory:
#
#    git: (hello-world)
#    dir: /some/path
#    sys: Linux:someuser@local.mpb
#    cmd: 
#
# Example output in non-git directory:
#
#    dir: /some/path
#    sys: Linux:someuser@local.mpb
#    cmd: 
#
export PS1='$(__crookse_check_if_git)
dir: $(tput setaf 82)\w$(tput sgr0)
sys: $(uname):$(tput setaf 238)${USER}$(tput sgr0)@$(hostname)
cmd: '

#///////////////////////////////////////////////////////////////////////////////////////////////////
#// ALIASES ////////////////////////////////////////////////////////////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////////////////////////
#
# Define session aliases. Some aliases use functions. Define those functions
# below and before the aliases.
#

unalias -a # Make sure the only aliases that ever get set are the ones defined below

#
# Set machine-specific aliases in the file below
#
if [ -f ~/dotfiles/.hidden/aliases.sh ]; then
  source ~/dotfiles/.hidden/aliases.sh
fi

#
# Add a spacer to the macOS Dock
#
__crookse_macdock_add_spacer() {
  defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
}

#
# Blow up (restart) the currently active shell
#
__crookse_moab() {
  echo "[moab] FULL RESTART"
  export __CROOKSE_ENV_VAR__PATH_SET="path_full_reset"
  source ~/dotfiles/.bash_profile
}

alias MOAB='moab'
alias bashrc='vim ~/.bashrc'
alias copy.etc.hosts='sudo cp ~/dotfiles/.hidden/etc/hosts /etc/hosts'
alias files.hidden.off='defaults write com.apple.finder AppleShowAllFiles -bool FALSE && killall Finder'
alias files.hidden.on='defaults write com.apple.finder AppleShowAllFiles -bool TRUE && killall Finder'
alias ll='ls -la'
alias macdock.add.spacer='__crookse_macdock_add_spacer'
alias moab.full-restart='__crookse_moab full-restart'
alias moab='__crookse_moab'
alias repos='cd ~/repos'
alias rm.dsstore='for file in $(find . | grep .DS_Store); do rm -i $file; done'

# Tmux
alias tmux='tmux -2'
alias tmux.boot='tmux new -s 0'
alias tmux.open='tmux attach -t 0'
alias tmux.make.sessions='deno run -A ~/.tmux/make_sessions.ts && vim ~/dotfiles/tmux_resurrect_fresh.txt'

# Vim
alias vim=nvim
alias vi=vim

# Node
alias ppm=pnpm
alias ppp=pnpm

#-------------------------------------------------------------------------------
# Bash Profile
#-------------------------------------------------------------------------------
# 
# Finally, output that .bash_profile has been executed
# 

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="~/Library/pnpm:$PATH"

# pnpm
export PNPM_HOME="~/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH=$BUN_INSTALL/bin:$PATH

dotfiles_echo "Your .bashrc file was loaded!"
